name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Project name to pack and publish
  PROJECT_NAME: RollCallBot
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/RollCallBot/
  GITHUB_USER: dsheehan
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Pack
      id: pack
      run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source src/$PROJECT_NAME.*proj
    - name: Publish
      run: dotnet publish -c Release --no-build --no-restore --self-contained true
    - name: Upload nupkg
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}_nupkg
        path: .src/bin/Release/*.nupkg
    - name: Upload exe
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}_exe
        path: .src/bin/Release/net5.0/publish/*
    - name: Push to GitHub Packages
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: dsheehan/rollcallbot/rollcallbot
        tag_with_sha: true
        add_git_labels: true
        path: /home/runner/work/RollCallBot/RollCallBot/   
        tags: unstable
